{"version":3,"sources":["logo.svg","assets/images/logo.png","App.tsx","assets/images/defaultUser.png","pages/chat/index.js","reportWebVitals.ts","index.tsx"],"names":["App","useState","name","setName","className","src","logo","alt","htmlFor","id","onChange","e","preVal","target","value","Button","variant","to","pathname","state","Logo","width","ContainerDivStyled","styled","div","ContentDivStyled","ToolBarDivStyled","Chat","location","useLocation","history","useHistory","loading","setLoading","ws","setWs","messages","setMessages","setId","inputMsg","setInputMsg","useEffect","console","log","initWebSocket","uuid","uuidv4","emit","on","data","message","date","crated","push","newSocket","webSocket","process","transports","setTimeout","close","map","idx","defaultUser","type","placeholder","onClick","moment","format","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.42195736.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logo.b303fac2.png\";","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n// Components\nimport TextField from \"@material-ui/core/Input\";\nimport Button from \"@material-ui/core/Button\";\nimport Logo from \"./assets/images/logo.png\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  const [name, setName] = useState<string>();\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Welcome To Chat Room!</p>\n        <div className=\"mb-2 flex items-center\">\n          <label htmlFor=\"name\">Name：</label>\n          <TextField\n            id=\"name\"\n            onChange={(e) => {\n              setName((preVal) => (preVal = e.target.value));\n            }}\n          />\n        </div>\n        {name ? (\n          <Button variant=\"contained\">\n            <Link\n              to={{\n                pathname: \"/chat-room\",\n                state: {\n                  name: name,\n                },\n              }}\n            >\n              Entry\n            </Link>\n          </Button>\n        ) : (\n          <></>\n        )}\n\n        <img className=\"mt-2\" src={Logo} alt=\"Logo\" width=\"200\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/defaultUser.9b757a8e.png\";","import { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\n// import axios from \"axios\";\nimport webSocket from \"socket.io-client\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport defaultUser from \"../../assets/images/defaultUser.png\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nimport moment from \"moment\";\n\nconst ContainerDivStyled = styled.div`\n  background-color: #282c34;\n  height: 100vh;\n  color: #fff;\n  overflow: hidden;\n  padding-bottom: 40px;\n`;\n\nconst ContentDivStyled = styled.div`\n  height: 100%;\n  overflow: auto;\n  ul {\n    display: flex;\n    padding: 10px;\n  }\n  .msgBox {\n    .profile {\n      margin: 2px;\n      width: 50px;\n      height: 50px;\n      background-color: #fff;\n      border-radius: 50%;\n      overflow: hidden;\n      .img {\n        width: 100%;\n        height: 100%;\n        display: inline-block;\n        object-fit: contain;\n      }\n    }\n    .body {\n      position: relative;\n      padding-left: 5px;\n      .name {\n        font-size: 12px;\n      }\n      .msg {\n        background-color: #7d7d7d;\n        border-radius: 10px;\n        padding: 5px;\n        font-size: 14px;\n        margin-left: 8px;\n        position: relative;\n        &:after {\n          content: \"\";\n          display: inline-block;\n          position: absolute;\n          width: 0;\n          height: 0;\n          border-style: solid;\n          border-width: 6.5px 12px 6.5px 0;\n          border-color: transparent #7d7d7d transparent transparent;\n          left: -10px;\n          top: 12px;\n        }\n      }\n    }\n    .date {\n      font-size: 12px;\n      display: flex;\n      align-items: flex-end;\n      padding-left: 5px;\n      color: #bdbdbd;\n    }\n    &-user {\n      ul {\n        flex-direction: row-reverse;\n      }\n      .body {\n        padding-right: 5px;\n        .name {\n          text-align: right;\n        }\n        .msg {\n          margin-right: 8px;\n          background-color: #27a55c;\n          &:after {\n            border-width: 6.5px 0 6.5px 12px;\n            border-color: transparent transparent transparent #27a55c;\n            left: auto;\n            right: -10px;\n            top: 12px;\n          }\n        }\n      }\n    }\n    &-announcement {\n      text-align: center;\n      padding: 5px;\n      > div {\n        padding: 10px;\n        background-color: #a0a0a059;\n        display: inline-block;\n        border-radius: 50px;\n        font-size: 14px;\n      }\n    }\n  }\n`;\n\nconst ToolBarDivStyled = styled.div`\n  color: #000;\n  height: 40px;\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  background-color: #fff;\n  input {\n    width: 80%;\n  }\n  .buttonDiv {\n    width: 10%;\n    display: inline-block;\n    padding: 0 5px;\n  }\n  button {\n    width: 100%;\n  }\n  * {\n    height: 100%;\n  }\n`;\n\n// TS\nconst Chat = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [id, setId] = useState(null);\n  const [inputMsg, setInputMsg] = useState(\"\");\n\n  useEffect(() => {\n    if (ws) {\n      //連線成功在 console 中打印訊息\n      console.log(\"success connect!\");\n      //設定監聽\n      initWebSocket();\n    }\n  }, [ws]);\n\n  const initWebSocket = () => {\n    const uuid = uuidv4();\n\n    // setMessages(\n    //   (preVal) =>\n    //     (preVal = [\n    //       {\n    //         message: \"妳好\",\n    //         crated: uuid,\n    //         name: \"Rex\",\n    //       },\n    //       {\n    //         message: \"很好\",\n    //         crated: \"043853904859034534\",\n    //         name: \"John\",\n    //       },\n    //     ])\n    // );\n\n    console.log(messages);\n\n    setId((preVal) => (preVal = uuid));\n    //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\n    ws.emit(\"joinChatRoom\", {\n      id: uuid,\n      name: location.state.name,\n    });\n\n    // 訊息事件\n    ws.on(\"getAllMessage\", (data) => {\n      console.log(\"訊息事件:\", data);\n\n      const { id, name, message, date } = data;\n\n      setMessages((preVal) => [\n        ...preVal,\n        {\n          message,\n          crated: id,\n          name,\n          date,\n        },\n      ]);\n    });\n\n    // 公告事件\n    ws.on(\"announcement\", (data) => {\n      console.log(\"公告事件:\", data);\n\n      const { message, crated, name } = data;\n      setMessages((preVal) => [\n        ...preVal,\n        {\n          message,\n          crated,\n          name,\n          date: null,\n        },\n      ]);\n    });\n  };\n\n  // const sendMessage = () => {\n  //   //以 emit 送訊息，並以 getMessage 為名稱送給 server 捕捉\n  //   // ws.emit('getMessage', '只回傳給發送訊息的 client');\n  // };\n\n  //  ---- init\n\n  useEffect(() => {\n    if (!location.state || !location.state.name) {\n      history.push(\"/\");\n    }\n    setLoading((preVal) => (preVal = true));\n\n    const newSocket = webSocket(\n      process.env.REACT_APP_API_DOMAIN\n        ? process.env.REACT_APP_API_DOMAIN\n        : \"https://localhost:3000/\",\n      {\n        transports: [\"websocket\"],\n      }\n    );\n\n    setTimeout(() => {\n      setWs(newSocket);\n      setLoading((preVal) => (preVal = false));\n    }, 2000);\n\n    return () => newSocket.close();\n  }, []);\n\n  return (\n    <ContainerDivStyled>\n      <div className=\"text-center p-4\">\n        <h2>\n          {loading\n            ? \"Loading...\"\n            : `Welcome ${\n                location.state && location.state.name\n                  ? location.state.name\n                  : \"unknow\"\n              } 😄`}\n          {id}\n        </h2>\n      </div>\n      <ContentDivStyled>\n        {messages.map((message, idx) => {\n          if (message.name === \"announcement\") {\n            return (\n              <div className=\"msgBox-announcement\">\n                <div>{message.message}</div>\n              </div>\n            );\n          } else {\n            return (\n              <div\n                className={`${\n                  message.crated === id ? \"msgBox-user\" : \"msgBox-others\"\n                } msgBox`}\n                key={idx}\n              >\n                <ul>\n                  <li className=\"profile\">\n                    <img className=\"img\" src={defaultUser} alt=\"User Profile\" />\n                  </li>\n                  <li className=\"body\">\n                    <div className=\"name\">{message.name}</div>\n                    <div className=\"msg\">{message.message}</div>\n                  </li>\n                  <li className=\"date\">{message.date}</li>\n                </ul>\n              </div>\n            );\n          }\n        })}\n      </ContentDivStyled>\n      <ToolBarDivStyled>\n        <input\n          className=\"w-100\"\n          type=\"text\"\n          placeholder=\"Write Something...\"\n          onChange={(e) => {\n            setInputMsg((preVal) => (preVal = e.target.value));\n          }}\n          value={inputMsg}\n        />\n        <div className=\"buttonDiv\">\n          <Button\n            loading={loading}\n            variant=\"contained\"\n            onClick={() => {\n              if (!inputMsg || loading) return;\n\n              ws.emit(\"sendMessage\", {\n                id: id,\n                name: location.state.name,\n                message: inputMsg,\n                date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n              });\n\n              setInputMsg((preVal) => (preVal = \"\"));\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n        <div className=\"buttonDiv\">\n          <Button variant=\"contained\">\n            <Link\n              to={{\n                pathname: \"/\",\n              }}\n            >\n              Exit\n            </Link>\n          </Button>\n        </div>\n      </ToolBarDivStyled>\n    </ContainerDivStyled>\n  );\n};\n\nexport default Chat;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Chat from \"./pages/chat/index\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <App />\n        </Route>\n        <Route path=\"/chat-room\" exact>\n          <Chat />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}